from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

import db


async def list_reminders(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat.id
    reminders = db.get_reminders_by_chat(chat_id)
    if not reminders:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å–≤–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        text = "–ù–µ—á–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å"
    else:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞
        lines = ["–í–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:"]
        for rem_id, _, remind_dt, message in reminders:
            when = remind_dt.strftime("%Y-%m-%d %H:%M")
            lines.append(
                f"""ID {rem_id}: {when} - {message}
                /cancel_{rem_id} - —É–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ"""
            )
        text = "\n".join(lines)
    markup = list_buttons()
    await query.edit_message_text(text, reply_markup=markup)


def list_buttons():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    """
    return InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    "–°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ",
                    callback_data="create_reminder",
                ),
                InlineKeyboardButton(
                    "–£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ",
                    callback_data="cancel_reminder",
                ),
            ],
            [
                InlineKeyboardButton(
                    "üîô –í –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
                    callback_data="profile",
                ),
            ],
        ]
    )
