from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

import database


async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∑–∞–Ω—è—Ç–∏—è—Ö, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è—Ö, –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
    """
    query = update.callback_query
    if query:
        await query.answer()
        chat_id = query.message.chat.id
        send = query.edit_message_text
    else:
        chat_id = update.effective_chat.id
        send = update.message.reply_text
    text = [f"*üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç {update.effective_user.first_name}*"]
    # –ü—Ä–µ–¥–º–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_subjects = database.get_user_subjects(chat_id)
    if user_subjects:
        subjects_list = "\n".join(f"- {name}" for _, name in user_subjects)
        text.append("")
        text.append("üìö –í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã:")
        text.append(f"–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã:\n{subjects_list}\n")
    else:
        text.append("‚ùóÔ∏è–¢—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª –∏–∑—É—á–∞—Ç—å –Ω–∏ –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç.")
    # –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–Ω—è—Ç–∏–µ –∏ –æ—Ü–µ–Ω–∫–∞
    # last_lesson = get_last_lesson_for_user(chat_id)
    # if last_lesson:
    #    updated_at, subj_name, topic_name, section_name, grade = last_lesson
    #    text.append("")
    #    text.append(
    #        f"""üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–Ω—è—Ç–∏–µ:
    #        {updated_at.strftime('%Y-%m-%d %H:%M')} - {subj_name}
    #        {topic_name} / {section_name}
    #        –û—Ü–µ–Ω–∫–∞: {grade if grade is not None else '–ù–µ—Ç –æ—Ü–µ–Ω–∫–∏'}
    #        """
    #    )
    # else:
    #    text.append("")
    #    text.append("‚ùóÔ∏è –¢—ã –µ—â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª –∑–∞–Ω—è—Ç–∏—è.")
    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    total, next_reminders = database.get_user_stats(chat_id)
    # text.append("")
    if next_reminders:
        rem_id, remind_dt, message = next_reminders
        text.append("üîî *–ë–ª–∏–∂–∞–π—à–µ–µ –∑–∞–Ω—è—Ç–∏–µ:*")
        text.append(f"{remind_dt.strftime('%Y-%m-%d %H:%M')} ‚Äî {message}")
    else:
        text.append("üîî *–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π*")

    markup = profile_buttons()
    await send("\n".join(text), parse_mode="Markdown", reply_markup=markup)


def profile_buttons():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    """
    return InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    "‚ûï –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ",
                    callback_data="create_reminder",
                ),
                InlineKeyboardButton(
                    "üìÖ –°–ø–∏—Å–æ–∫ –∑–∞–Ω—è—Ç–∏–π",
                    callback_data="show_list",
                ),
            ],
            [
                InlineKeyboardButton(
                    "–í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è",
                    callback_data="select_subject",
                ),
            ],
        ]
    )
