import logging
from telegram.ext import ContextTypes
from telegram import InlineKeyboardMarkup,InlineKeyboardButton


logger = logging.getLogger(__name__)


async def send_reminder(context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –∫–æ–ª–ª–±—ç–∫, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –∏–∑ –ë–î
    """
    job = context.job
    chat_id = job.chat_id
    message_text = job.data.get("message")
    remind_id = job.data.get("reminder_id")
    try:  # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        lesson_hint = (
            f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {message_text}\n"
            f"–ß—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –∑–∞–Ω—è—Ç–∏–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /lesson_{remind_id}"
        )
        await context.bot.send_message(chat_id=chat_id, text=lesson_hint, reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("üè† –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile")]]
        ),)
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ {e} –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è {message_text}")
